# This workflow will upload a Python Package using Twine when a semantically
# versioned tagged release is pushed.
# For more information see: https://help.github.com/en/actions/language-and-framework-guides/using-python-with-github-actions#publishing-to-package-registries

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Upload Python Package

env:
  DB_DATABASE: edge_dev
  DB_USER: root
  DB_PASSWORD: ''

on:
  push:
    branches:
      - 'install-bower*'
    # tags:
    #   - v[0-9]+.[0-9]+.[0-9]+

jobs:
  deploy:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.6'
    - name: Setup Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '14'
    - name: Cache dependencies
      uses: actions/cache@v2
      with:
        path: ~/.npm
        key: npm-${{ hashFiles('package-lock.json') }}
        restore-keys: npm-
    # - name: Set up npm
    #   uses: bahmutov/npm-install@v1
    - name: Set up MySQL
      run: |
        sudo /etc/init.d/mysql start
        mysql -e 'CREATE DATABASE ${{ env.DB_DATABASE }};' -u root -p '' 
    - name: Set up cache
      uses: actions/cache@v1
      id: cache
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    - name: Install from requirements
      if: steps.cache.outputs.cache-hit != 'true'
      run: |
        pip install -r requirements.txt
        pip install build
    - name: Install dependencies
      run: |
        npm install -g bower
        python -m pip install --upgrade pip
        python -c 'import MySQLdb as Database; print(Database.__version__)'
    - name: Build package
      run: python -m build
    - name: Publish package
      uses: pypa/gh-action-pypi-publish@27b31702a0e7fc50959f5ad993c78deac1bdfc29
      with:
        user: __token__
        password: bad_password
        # password: ${{ secrets.PYPI_API_TOKEN }}
